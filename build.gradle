/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'marc' at '20/01/17 16:47' with Gradle 3.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'


def fauxServerDir = file("$projectDir/fauxServer")
def currentApplicationDir = file("$fauxServerDir/application")

task buildServer(type: Exec) {
    commandLine = 'docker'
    args = ['build', '-t', 'faux-server', fauxServerDir]
}

task startServer(type: Exec, dependsOn: buildServer) {
    doFirst {
        currentApplication.mkdirs()
    }
    commandLine = 'docker'
    args = ['run', '-d', '-v', "$currentApplicationDir:/application", '-p', '8080:80', 'faux-server']
}

def releasesDir = file("$buildDir/releases")
def releaseName = "${project.name}-release-${new Date().format("HH-mm-ss_dd-MM-yyyy", TimeZone.getTimeZone('CET'))}"

task release(type: Zip) {
    if (!buildDir.exists()) {
        buildDir.mkdirs()
    }
    if (!releasesDir.exists()) {
        releasesDir.mkdirs()
    }

    baseName releaseName
    destinationDir releasesDir
    from('frontend/public') {
        into('static')
    }
    from('backend') {
        into('.')
        exclude '*.gradle', '*.json', '*.lock'
    }
}
release.dependsOn 'backend:build'
release.dependsOn 'frontend:build'

def currentRelease = file("${releasesDir}/${releaseName}.zip")


task deploy(type: Copy, dependsOn: release) {
    from zipTree(currentRelease)
    into currentApplicationDir
}
startServer.mustRunAfter deploy

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile gradleApi()
    compile localGroovy()
}
